from mada_reader import parser

MADAFILE = "tests/assets/GBKB-13_0004.mada"
events = parser.read_file(MADAFILE)


def test_parse_event():
    event = events[123]
    header, event = parser.parse_header(event)
    assert header == parser.EventHeader(
        trigger_counter=123,
        clock_counter=971495,
        input_ch2_counter=0
    )
    fadc, _ = parser.parse_flush_adc(event)
    assert fadc.ch0 == [549, 538, 538, 538, 552, 551, 537, 538, 554, 556, 540, 536, 548, 546, 533, 536, 542, 539, 529, 535, 547, 541, 532, 534, 542, 541, 526, 529, 543, 542, 534, 531, 531, 527, 524, 531, 534, 533, 537, 546, 541, 535, 537, 541, 541, 538, 541, 547, 541, 538, 536, 538, 540, 538, 538, 538, 539, 542, 540, 537, 535, 536, 536, 534, 534, 536, 538, 537, 538, 537, 536, 532, 532, 538, 541, 537, 536, 538, 541, 540, 538, 536, 538, 540, 540, 539, 537, 536, 541, 542, 540, 540, 545, 546, 540, 536, 545, 548, 539, 537, 542, 546, 536, 534, 534, 532, 529, 538, 542, 538, 537, 545, 538, 534, 538, 546, 535, 524, 531, 546, 538, 526, 529, 546, 542, 534, 535, 537, 534, 532, 536, 540, 536, 538, 548, 550, 536, 536, 547, 547, 536, 535, 545, 543, 536, 532, 538, 539, 536, 533, 537, 536, 534, 536, 540, 541, 538, 536, 536, 538, 542, 540, 533, 532, 537, 538, 534, 532, 536, 540, 542, 541, 538, 537, 539, 547, 546, 541, 540, 539, 541, 540, 536, 536, 541, 542, 531, 532, 542, 546, 532, 528, 531, 533, 532, 537, 542, 537, 532, 535, 540, 542, 538, 537, 541, 538, 531, 530, 534, 540, 542, 540, 536, 538, 547, 549, 540, 538, 542, 542, 539, 535, 536, 541, 539, 533, 533, 539, 540, 536, 537, 541, 545, 540, 538, 537, 536, 536, 537, 537, 534, 535, 536, 534, 530, 530, 540, 541, 534, 532, 540, 550, 545, 538, 540, 545, 546, 542, 541, 541, 546, 541, 535, 533, 534, 534, 534, 532, 532, 539, 546, 540, 538, 546, 547, 538, 531, 532, 540, 546, 537, 524, 521, 533, 542, 536, 531, 533, 536, 538, 537, 535, 538, 540, 542, 542, 540, 540, 536, 538, 541, 539, 535, 536, 540, 541, 535, 532, 545, 552, 549, 540, 538, 540, 538, 533, 533, 534, 536, 533, 532, 538, 548, 548, 542, 535, 534, 540, 547, 543, 540, 539, 534, 530, 533, 540, 538, 535, 533, 546, 551, 542, 536, 537, 542, 545, 538, 536, 536, 534, 532, 534, 536, 538, 538, 538, 536, 536, 540, 538, 536, 534, 533, 536, 536, 536, 539, 538, 536, 536, 541, 545, 540, 536, 539, 539, 538, 534, 534, 538, 539, 538, 538, 539, 540, 536, 536, 534, 536, 536, 534, 536, 541, 540, 536, 536, 539, 537, 534, 534, 536, 538, 538, 538, 540, 541, 540, 541, 540, 540, 539, 538, 537, 536, 538, 538, 536, 531, 530, 537, 545, 540, 532, 532, 536, 545, 545, 540, 536, 538, 547, 548, 538, 530, 537, 546, 539, 536, 534, 538, 534, 531, 540, 545, 536, 534, 540, 546, 538, 536, 536, 539, 538, 535, 535, 532, 534, 540, 542, 536, 529, 530, 540, 546, 540, 533, 537, 545, 547, 542, 540, 536, 536, 541, 545, 542, 535, 533, 538, 545, 541, 539, 548, 550, 542, 531, 538, 554, 546, 528, 530, 542, 543, 536, 538, 540, 536, 532, 540, 540, 526, 524, 538, 541, 530, 530, 542, 547, 531, 531,
                        542, 539, 525, 524, 539, 542, 532, 538, 548, 545, 536, 540, 548, 546, 540, 543, 547, 539, 538, 540, 540, 536, 533, 537, 540, 532, 528, 533, 538, 537, 537, 537, 538, 535, 534, 533, 534, 537, 537, 535, 533, 538, 548, 542, 539, 538, 538, 536, 538, 548, 552, 546, 538, 541, 547, 545, 537, 536, 534, 536, 535, 536, 537, 538, 536, 532, 535, 538, 537, 533, 537, 540, 537, 532, 534, 540, 539, 539, 536, 534, 540, 542, 542, 539, 548, 552, 541, 530, 532, 547, 547, 537, 532, 533, 536, 543, 546, 535, 534, 539, 535, 527, 529, 546, 548, 538, 538, 541, 533, 527, 534, 541, 532, 527, 538, 548, 535, 525, 532, 546, 539, 535, 540, 540, 534, 536, 536, 536, 533, 536, 541, 538, 534, 546, 556, 551, 534, 530, 542, 546, 538, 535, 537, 541, 539, 537, 539, 542, 538, 532, 532, 536, 538, 537, 535, 536, 540, 537, 533, 532, 536, 537, 535, 535, 540, 541, 536, 535, 537, 541, 537, 536, 541, 541, 539, 539, 545, 545, 538, 538, 542, 542, 537, 540, 545, 536, 532, 535, 541, 535, 531, 539, 546, 536, 529, 530, 537, 540, 539, 534, 533, 534, 540, 546, 538, 530, 534, 536, 540, 537, 536, 540, 540, 540, 540, 539, 536, 534, 540, 548, 546, 540, 539, 540, 541, 542, 546, 537, 529, 535, 549, 547, 535, 530, 536, 540, 540, 536, 531, 530, 534, 539, 536, 533, 533, 537, 536, 538, 540, 546, 540, 532, 534, 542, 547, 535, 532, 533, 534, 538, 539, 538, 538, 535, 536, 542, 546, 546, 540, 538, 540, 542, 539, 536, 538, 540, 539, 534, 531, 532, 533, 531, 535, 536, 540, 542, 538, 536, 537, 542, 545, 542, 540, 538, 538, 535, 536, 540, 542, 540, 537, 539, 546, 542, 537, 533, 535, 538, 535, 534, 532, 531, 530, 535, 534, 532, 534, 540, 542, 541, 540, 545, 542, 536, 536, 534, 536, 541, 542, 536, 536, 542, 548, 546, 536, 534, 538, 538, 534, 535, 546, 545, 538, 537, 538, 540, 538, 539, 540, 538, 538, 545, 546, 542, 536, 537, 537, 535, 532, 534, 538, 536, 535, 538, 539, 534, 533, 540, 541, 538, 535, 536, 542, 541, 540, 536, 534, 532, 538, 538, 536, 537, 539, 540, 539, 536, 542, 547, 540, 535, 537, 546, 550, 542, 536, 534, 537, 541, 536, 527, 528, 535, 536, 534, 535, 536, 539, 541, 545, 539, 534, 536, 540, 540, 540, 539, 538, 540, 538, 536, 532, 534, 539, 536, 534, 534, 540, 548, 540, 533, 532, 538, 539, 538, 542, 545, 536, 537, 542, 542, 536, 534, 538, 545, 540, 538, 539, 536, 536, 538, 540, 541, 538, 532, 534, 546, 547, 541, 538, 540, 538, 537, 534, 536, 536, 530, 530, 537, 534, 530, 535, 539, 537, 529, 528, 544, 548, 534, 528, 536, 541, 534, 536, 540, 535, 532, 542, 542, 535, 536, 548, 550, 536, 534, 545, 546, 533, 538, 554, 550, 535, 533, 542, 541, 533, 534, 538, 538, 531, 537, 541, 538, 533, 534]


def test_parse_headers():
    parsed_events = parser.parse_headers(events)
    assert len(parsed_events) == 183
    assert parsed_events[0] == parser.EventHeader(
        trigger_counter=0,
        clock_counter=0,
        input_ch2_counter=0
    )
    assert parsed_events[123] == parser.EventHeader(
        trigger_counter=123,
        clock_counter=971495,
        input_ch2_counter=0
    )
